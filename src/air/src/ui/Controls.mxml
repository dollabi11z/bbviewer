<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
               xmlns:s="library://ns.adobe.com/flex/spark" 
               xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:local="*"
			   xmlns:ui="ui.*"
			   width="100%">
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->		
	</fx:Declarations>

	
	<fx:Script>
		<![CDATA[
			import flash.events.MouseEvent;
			import org.osmf.media.MediaPlayerState;
			import flash.filters.DropShadowFilter;
			import flash.events.Event;
			import objects.VideoDataObject;

			private var mIsDragging:Boolean = false;
			private var mProgressPosition:Number;
			private var lastVideoData:VideoDataObject;
			
			//update controls based on state change
			public function onData( data:VideoDataObject ):void
			{
				lastVideoData = data;
				if ( data.playing )
				{	
					play.visible = false;
					pause.visible = true;
					var maxDistance:Number = ( slider.width - ( slidercontrol.width / 2 ) );
					sliderprogress.width =  maxDistance * ( data.currentTime / data.duration );
					if ( !mIsDragging && !data.seeking )
					{
						//update the slider control location
						slidercontrol.x = sliderprogress.width - ( slidercontrol.width / 2 );
					}
				} else if ( data.paused )
				{
					pause.visible = false;
					play.visible = true;
				}
				//set play time
				txtState.text = data.displayTime;
				//check for mute
				
			}
			
			public function startProgressDrag( event:MouseEvent ):void
			{
				mProgressPosition = slidercontrol.x;
				mIsDragging = true;
				doProgressDrag( event );
			}
			
			public function doProgressDrag( event:MouseEvent ):void
			{
				if ( mIsDragging ) slidercontrol.x = event.stageX - ( slidercontrol.width / 2 );
			}
			
			public function endProgressDrag( event:MouseEvent ):void
			{
				doProgressDrag( event );
				sliderprogress.width = event.stageX;
				mIsDragging = false;
				
				var seekSecs:Number = ( event.stageX / slider.width ) * lastVideoData.duration;
				( parentApplication as WindowContent ).video.seek( seekSecs );
			}
			
			public function setControlState( control:String, enabled:Boolean ):void
			{
				if ( enabled )
				{
					switch( control )
					{
						case "play":
						case "pause":
							play.enabled = enabled;
							pause.enabled = enabled;
							break;
						case "back":
							back.enabled = enabled;
							break;
						case "forward":
							forward.enabled = enabled;
							break;
						case "jumpback":
							jumpback.enabled = enabled;
							break;
						case "jumpforward":
							jumpforward.enabled = enabled;
							break;
						case "slider":
							slider.enabled = enabled;
							slidercontrol.enabled = enabled;
							break;
					}
				}
			}
			
			public function mute():void
			{
				if ( ( parentApplication as WindowContent ).video.mute() )
				{
					volume.visible = false;
					volume_mute.visible = true;
				}
			}
			
			public function unmute():void
			{
				if ( ( parentApplication as WindowContent ).video.unmute() )
				{
					volume_mute.visible = false;
					volume.visible = true;
				}
			}
			
			private function toggleAngles():void
			{
				playerAngles.visible = !playerAngles.visible;
			}
			
			public function toggleSettings():void
			{
				playerSettings.visible = !playerSettings.visible;
			}
			
		]]>
	</fx:Script>
	<!-- Background -->
	<!-- Seekbar controls -->
	<!-- Center controls ( may be hidden ) -->
	<!-- Left side controls -->
	<!-- Right side controls -->

	<ui:AlternateAngles id="playerAngles" bottom="52" right="5" visible="false" />
	<ui:Settings id="playerSettings" bottom="52" right="5" visible="false" />
	
	<s:Group width="100%" bottom="0">
		<s:Rect width="100%" height="52">
			<s:fill><s:SolidColor color="0x1B1B1B" alpha="0.9" /></s:fill>
		</s:Rect>
	</s:Group>
	
	<s:Group id="slider" width="100%" height="24" bottom="45"
			mouseDown="startProgressDrag(event)"
			mouseMove="doProgressDrag(event)"
			mouseUp="endProgressDrag(event)"
			enabled="false"
			>
		<s:Rect id="sliderbar" width="100%" height="8" verticalCenter="1">
			<s:fill><s:SolidColor color="0x666666" /></s:fill>
		</s:Rect>
		<s:Rect id="sliderprogress" width="0" height="8" verticalCenter="1">
			<s:fill><s:SolidColor color="0x993333" /></s:fill>
		</s:Rect>
		<ui:ImageButton id="slidercontrol" 
			width="24" height="24"
			skinClass="ui.ImageButtonSkin"
			image="@Embed(source='../assets/images/sliderbutton_normal.png')"
			imageDown="@Embed(source='../assets/images/sliderbutton_down.png')"
			imageOver="@Embed(source='../assets/images/sliderbutton_over.png')"
			imageDisabled="@Embed(source='../assets/images/sliderbutton_disabled.png')"
			verticalCenter="1"
			enabled="false"
			/>
	</s:Group>
	
	<s:HGroup width="100%" bottom="32" verticalAlign="middle" horizontalAlign="center">
		<mx:Text id="txtState"
						focusEnabled="false"
						selectable="false"
						text="This is the text"
						styleName="smallText"
						filters="{[new DropShadowFilter(2, 33)]}"
						/>
	</s:HGroup>

	<s:HGroup minWidth="64" bottom="0" left="0" paddingTop="5" paddingLeft="5" paddingRight="5" paddingBottom="5">
		<s:Group width="32" height="32">
			<ui:ImageButton id="pause" click="parentApplication.video.pause()"
				visible="false"
				width="32" height="32"
				skinClass="ui.ImageButtonSkin"
				image="@Embed(source='../assets/images/pause_normal.png')"
				imageDown="@Embed(source='../assets/images/pause_down.png')"
				imageOver="@Embed(source='../assets/images/pause_over.png')"
				imageDisabled="@Embed(source='../assets/images/pause_disabled.png')"
				enabled="false"
				/>
			<ui:ImageButton id="play" click="parentApplication.video.play()"
				width="32" height="32"
				skinClass="ui.ImageButtonSkin"
				image="@Embed(source='../assets/images/play_normal.png')"
				imageDown="@Embed(source='../assets/images/play_down.png')"
				imageOver="@Embed(source='../assets/images/play_over.png')"
				imageDisabled="@Embed(source='../assets/images/play_disabled.png')"
				enabled="false"
				/>
		</s:Group>
		<s:Group width="32" height="32">
			<ui:ImageButton id="volume" click="mute()"
				width="32" height="32"
				skinClass="ui.ImageButtonSkin"
				image="@Embed(source='../assets/images/volume_normal.png')"
				imageDown="@Embed(source='../assets/images/volume_down.png')"
				imageOver="@Embed(source='../assets/images/volume_over.png')"
				imageDisabled="@Embed(source='../assets/images/volume_disabled.png')"
				/>
			<ui:ImageButton id="volume_mute" click="unmute()"
				width="32" height="32"
				skinClass="ui.ImageButtonSkin"
				image="@Embed(source='../assets/images/mute_normal.png')"
				imageDown="@Embed(source='../assets/images/mute_down.png')"
				imageOver="@Embed(source='../assets/images/mute_over.png')"
				imageDisabled="@Embed(source='../assets/images/mute_disabled.png')"
				visible="false"
				/>
		</s:Group>
	</s:HGroup>
	
	<s:HGroup bottom="0" paddingTop="5" paddingLeft="5" paddingRight="5" paddingBottom="5" horizontalCenter="1">
		<ui:ImageButton id="back" click="parentApplication.video.backwards(Main.SKIP_LONG)"
			width="32" height="32"
			skinClass="ui.ImageButtonSkin"
			image="@Embed(source='../assets/images/back_normal.png')"
			imageDown="@Embed(source='../assets/images/back_down.png')"
			imageOver="@Embed(source='../assets/images/back_over.png')"
			imageDisabled="@Embed(source='../assets/images/back_disabled.png')" />
		<ui:ImageButton id="jumpback" click="parentApplication.video.backwards(Main.SKIP_SHORT)"
			width="32" height="32"
			skinClass="ui.ImageButtonSkin"
			image="@Embed(source='../assets/images/jumpback_normal.png')"
			imageDown="@Embed(source='../assets/images/jumpback_down.png')"
			imageOver="@Embed(source='../assets/images/jumpback_over.png')"
			imageDisabled="@Embed(source='../assets/images/jumpback_disabled.png')" />
		<ui:ImageButton id="jumpforward" click="parentApplication.video.forward(Main.SKIP_SHORT)"
			width="32" height="32"
			skinClass="ui.ImageButtonSkin"
			image="@Embed(source='../assets/images/jumpforward_normal.png')"
			imageDown="@Embed(source='../assets/images/jumpforward_down.png')"
			imageOver="@Embed(source='../assets/images/jumpforward_over.png')"
			imageDisabled="@Embed(source='../assets/images/jumpforward_disabled.png')" />
		<ui:ImageButton id="forward" click="parentApplication.video.forward(Main.SKIP_LONG)"
			width="32" height="32"
			skinClass="ui.ImageButtonSkin"
			image="@Embed(source='../assets/images/forward_normal.png')"
			imageDown="@Embed(source='../assets/images/forward_down.png')"
			imageOver="@Embed(source='../assets/images/forward_over.png')"
			imageDisabled="@Embed(source='../assets/images/forward_disabled.png')" />	
	</s:HGroup>
	
	<s:HGroup bottom="0" minWidth="128" right="0" paddingTop="5" paddingLeft="5" paddingRight="5" paddingBottom="5">
		<ui:ImageButton id="angles" click="toggleAngles()" right="0"
			width="32" height="32"
			skinClass="ui.ImageButtonSkin"
			image="@Embed(source='../assets/images/angles_normal.png')"
			imageDown="@Embed(source='../assets/images/angles_down.png')"
			imageOver="@Embed(source='../assets/images/angles_over.png')"
			imageDisabled="@Embed(source='../assets/images/angles_disabled.png')" />
		<ui:ImageButton id="bookmarks" click="parentApplication.toggleBookmarks()" right="0"
			width="32" height="32"
			skinClass="ui.ImageButtonSkin"
			image="@Embed(source='../assets/images/bookmarks_normal.png')"
			imageDown="@Embed(source='../assets/images/bookmarks_down.png')"
			imageOver="@Embed(source='../assets/images/bookmarks_over.png')"
			imageDisabled="@Embed(source='../assets/images/bookmarks_disabled.png')" />
		<ui:ImageButton id="settings" click="toggleSettings()" right="0"
			width="32" height="32"
			skinClass="ui.ImageButtonSkin"
			image="@Embed(source='../assets/images/settings_normal.png')"
			imageDown="@Embed(source='../assets/images/settings_down.png')"
			imageOver="@Embed(source='../assets/images/settings_over.png')"
			imageDisabled="@Embed(source='../assets/images/settings_disabled.png')" />
		<ui:ImageButton id="fullscreen" click="parentApplication.toggleFullscreen()" right="0"
			width="32" height="32"
			skinClass="ui.ImageButtonSkin"
			image="@Embed(source='../assets/images/fullscreen_normal.png')"
			imageDown="@Embed(source='../assets/images/fullscreen_down.png')"
			imageOver="@Embed(source='../assets/images/fullscreen_over.png')"
			imageDisabled="@Embed(source='../assets/images/fullscreen_disabled.png')" />
	</s:HGroup>
</s:Group>