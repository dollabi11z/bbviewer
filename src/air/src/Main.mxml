<?xml version="1.0" encoding="utf-8"?>
<!--
	Main is the initial startup window. Here it is used as a loading screen, and initiates the creation of
	the first NativeWindow instance that will be used for the application.
	
	Main may also contain static objects that are shared across application window instances.
-->
<s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009"
                       xmlns:s="library://ns.adobe.com/flex/spark"
                       xmlns:mx="library://ns.adobe.com/flex/mx"
					   width="640"
					   height="360"
					   initialize="init()"
					   showStatusBar="false" >
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
		
	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		@namespace mx "library://ns.adobe.com/flex/mx";
		
		@font-face { 
			src: url("assets/fonts/UBUNTU-R.TTF"); 
			fontFamily: UbuntuFont; 
			embedAsCFF: false; 
		}
		
		.smallText {
			fontFamily: UbuntuFont;
            fontSize: 10;
            color: #dfdfdf;
        }

		.smallTextDark {
			fontFamily: UbuntuFont;
            fontSize: 10;
            color: #555555;
        }

		.normalText {
			fontFamily: UbuntuFont;
            fontSize: 14;
            color: #dfdfdf;
        }
		
		.normalTextDark {
			fontFamily: UbuntuFont;
            fontSize: 14;
            color: #111111;
        }
	</fx:Style>
	
	<fx:Script>
		<![CDATA[
			import flash.events.TimerEvent;
			import flash.geom.Point;
			import flash.display.Screen;
			import flash.system.Capabilities;
			import flash.display.NativeWindowSystemChrome;
			import flash.display.NativeWindowInitOptions;
			import flash.display.StageScaleMode;
			import flash.display.StageAlign;	
			import flash.utils.Timer;
			import mx.core.Window;
			import Logger;

			public static const SKIP_SHORT:Number = 60;
			public static const SKIP_LONG:Number = 300;
				
			public static var logger:Logger;
			private static const initialWidth:Number = 640;
			private static const initialHeight:Number = 360;
			private var delayTimer:Timer;
			private var window:ExtendedNativeWindow;
			
			private function init():void
			{
				//setup the logging object
				logger = new Logger();
				
				//place the window
				nativeWindow.x = ( Capabilities.screenResolutionX / 2 ) - ( nativeWindow.width / 2 );
				nativeWindow.y = ( Capabilities.screenResolutionY / 2 ) - ( nativeWindow.height / 2 );
				
				//load adaptive plugins so they will be available to all windows
				Helper.loadAdaptivePlugins();

				//launching straight into a new native window tends to cause problems
				//so we wait a few seconds before opening the first one
				//use this time to display the splash screen
				delayTimer = new Timer(5000);
				delayTimer.addEventListener( TimerEvent.TIMER, onDelayComplete );
				delayTimer.start();
			}
						
			private function onDelayComplete(event:TimerEvent):void
			{
				//now we can close this initial loading window
				delayTimer.stop();
				close();
				
				//and create the application window
				createNativeWindow( ( Screen.mainScreen.bounds.width - initialWidth) / 2, ( Screen.mainScreen.bounds.height - initialHeight) / 2 );
			}
			 
			public static function createNativeWindow( x:int, y:int ):void
			{
				//* Set up the NativeWindow options
				var options:NativeWindowInitOptions = new NativeWindowInitOptions();
				
				//* Create the NativeWindow
				var window:ExtendedNativeWindow = new ExtendedNativeWindow(options);
				
				//* Set the height, width and position
				window.width = initialWidth;
				window.height = initialHeight;
				window.minSize = new Point(100, 100);
				window.x = x;  
				window.y = y; 
				window.stage.scaleMode = StageScaleMode.NO_SCALE;
				window.stage.align = StageAlign.TOP_LEFT;
				
				//* Create a new AppWindow instnace, and add a reference to the NativeWindow that will contain it
				var content:AppWindow = new AppWindow();
				content.setWindow(window);
				
				//* Pass the content into the native window
				window.addChildControls(content);

				//* Activate the window
				window.activate();
			}
			
		]]>
	</fx:Script>
	<!-- our splash screen loading screen image -->
	<s:BitmapImage source="@Embed(source='assets/images/loading.png')" width="640" height="360" />
</s:WindowedApplication>